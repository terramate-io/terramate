// Copyright 2021 Mineiros GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package sandbox_test

import (
	"testing"

	"github.com/rs/zerolog"
	"github.com/terramate-io/terramate/test"
	"github.com/terramate-io/terramate/test/sandbox"
)

func init() {
	zerolog.SetGlobalLevel(zerolog.Disabled)
}

func TestInitializedGitHasOriginMain(t *testing.T) {
	basedir := t.TempDir()
	git := sandbox.NewGit(t, basedir)
	git.Init()
	git.RevParse("origin/main")
}

func TestInitializeArbitraryRemote(t *testing.T) {
	basedir := t.TempDir()
	git := sandbox.NewGit(t, basedir)
	git.InitLocalRepo()

	// the main branch only exists after first commit.
	path := test.WriteFile(t, git.BaseDir(), "README.md", "# generated by terramate")
	git.Add(path)
	git.Commit("first commit")

	const remote = "mineiros"
	const remoteBranch = "default"

	git.SetupRemote(remote, remoteBranch, "main")
	git.RevParse(remote + "/" + remoteBranch)
}
