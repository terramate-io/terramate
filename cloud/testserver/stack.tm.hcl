// Copyright 2024 Terramate GmbH
// SPDX-License-Identifier: MPL-2.0

stack {
  name        = "package testserver // import \"github.com/terramate-io/terramate/cloud/testserver\""
  description = "package testserver // import \"github.com/terramate-io/terramate/cloud/testserver\"\n\nPackage testserver provides fake Terramate Cloud endpoints for testing purposes.\n\nfunc DisableEndpoints(paths ...string) map[string]bool\nfunc EnableAllConfig() map[string]bool\nfunc GetCommit(store *cloudstore.Data, w http.ResponseWriter, _ *http.Request, ...)\nfunc GetDeploymentLogs(store *cloudstore.Data, w http.ResponseWriter, _ *http.Request, ...)\nfunc GetDeploymentLogsEvents(store *cloudstore.Data, w http.ResponseWriter, _ *http.Request, ...)\nfunc GetDeployments(store *cloudstore.Data, w http.ResponseWriter, _ *http.Request, ...)\nfunc GetDrift(store *cloudstore.Data, w http.ResponseWriter, _ *http.Request, ...)\nfunc GetDrifts(store *cloudstore.Data, w http.ResponseWriter, _ *http.Request, ...)\nfunc GetMemberships(store *cloudstore.Data, w http.ResponseWriter, r *http.Request, ...)\nfunc GetPreview(store *cloudstore.Data, w http.ResponseWriter, _ *http.Request, ...)\nfunc GetPullRequest(store *cloudstore.Data, w http.ResponseWriter, _ *http.Request, ...)\nfunc GetStackDrifts(store *cloudstore.Data, w http.ResponseWriter, r *http.Request, ...)\nfunc GetStacks(store *cloudstore.Data, w http.ResponseWriter, r *http.Request, ...)\nfunc GetUsers(store *cloudstore.Data, w http.ResponseWriter, r *http.Request, ...)\nfunc GetWellKnown(store *cloudstore.Data, w http.ResponseWriter, _ *http.Request, ...)\nfunc ListCheckRunsForRef(_ *cloudstore.Data, w http.ResponseWriter, _ *http.Request, ...)\nfunc ListPullRequestsWithCommit(_ *cloudstore.Data, w http.ResponseWriter, _ *http.Request, ...)\nfunc ListReviews(_ *cloudstore.Data, w http.ResponseWriter, _ *http.Request, ...)\nfunc PatchDeployment(store *cloudstore.Data, w http.ResponseWriter, r *http.Request, ...)\nfunc PatchStackPreviews(store *cloudstore.Data, w http.ResponseWriter, r *http.Request, ...)\nfunc PostDeployment(store *cloudstore.Data, w http.ResponseWriter, r *http.Request, ...)\nfunc PostDeploymentLogs(store *cloudstore.Data, w http.ResponseWriter, r *http.Request, ...)\nfunc PostDrift(store *cloudstore.Data, w http.ResponseWriter, r *http.Request, ...)\nfunc PostPreviews(store *cloudstore.Data, w http.ResponseWriter, r *http.Request, ...)\nfunc PostStackPreviewsLogs(store *cloudstore.Data, w http.ResponseWriter, r *http.Request, ...)\nfunc PullRequestIsMerged(_ *cloudstore.Data, w http.ResponseWriter, _ *http.Request, ...)\nfunc PutStack(store *cloudstore.Data, w http.ResponseWriter, r *http.Request, ...)\nfunc Router(store *cloudstore.Data) *httprouter.Router\nfunc RouterAdd(store *cloudstore.Data, router *httprouter.Router, enabled map[string]bool)\nfunc RouterAddCustoms(router *httprouter.Router, store *cloudstore.Data, custom Custom)\nfunc RouterWith(store *cloudstore.Data, enabled map[string]bool) *httprouter.Router\ntype Custom struct{ ... }\ntype Handler func(store *cloudstore.Data, w http.ResponseWriter, r *http.Request, ...)\ntype Route struct{ ... }"
  tags        = ["cloud", "golang", "testserver"]
  id          = "83b321e3-01a5-4a7b-a318-aa5b30c7888e"
}
